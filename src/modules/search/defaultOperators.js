import PropTypes from "prop-types"

const defaultOperators = {
  _eq: "Equals",
  _neq: "Doesn't equal",
  _lt: "Less than",
  _lte: "Less than or equal to",
  _gt: "Greater than",
  _gte: "Greater than or equal to",
  // "_in": "Is one of",
  // "_nin": "Is not one of",
  _null: "Is null",
  _nnull: "Isn't null",
  _contains: "Contains",
  _icontains: "Contains (case-insensitive)",
  _ncontains: "Doesn't contain",
  _starts_with: "Starts with",
  _istarts_with: "Starts with (case-insensitive)",
  _nstarts_with: "Doesn't start with",
  _nistarts_with: "Doesn't start with (case-insensitive)",
  _ends_with: "Ends with",
  _iends_with: "Ends with (case-insensitive)",
  _nends_with: "Doesn't end with",
  _niends_with: "Doesn't end with (case-insensitive)",
  _empty: "Is empty",
  _nempty: "Isn't empty",
}

const defaultOperatorsProptypes = PropTypes.shape({
  _eq: PropTypes.string,
  _neq: PropTypes.string,
  _lt: PropTypes.string,
  _lte: PropTypes.string,
  _gt: PropTypes.string,
  _gte: PropTypes.string,
  // "_in": PropTypes.string,
  // "_nin": PropTypes.string,
  _null: PropTypes.string,
  _nnull: PropTypes.string,
  _contains: PropTypes.string,
  _icontains: PropTypes.string,
  _ncontains: PropTypes.string,
  _starts_with: PropTypes.string,
  _istarts_with: PropTypes.string,
  _nstarts_with: PropTypes.string,
  _nistarts_with: PropTypes.string,
  _ends_with: PropTypes.string,
  _iends_with: PropTypes.string,
  _nends_with: PropTypes.string,
  _niends_with: PropTypes.string,
  _empty: PropTypes.string,
  _nempty: PropTypes.string,
})

export { defaultOperators, defaultOperatorsProptypes }
